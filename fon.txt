
assets/assembly/ours/fatorial.o:     file format elf32-i386


Disassembly of section .data:

00000000 <nwln>:
   0:	0d 0a          	or     $0x726f460a,%eax

00000002 <msg1>:
   2:	46                   	inc    %esi
   3:	6f                   	outsl  %ds:(%esi),(%dx)
   4:	72 61                	jb     67 <tmp+0x2>
   6:	6d                   	insl   (%dx),%es:(%edi)
   7:	20 6c 69 64          	and    %ch,0x64(%ecx,%ebp,2)
   b:	6f                   	outsl  %ds:(%esi),(%dx)
   c:	73 20                	jae    2e <msg_overflow+0x6>

0000000e <msg_chars>:
   e:	20 63 61             	and    %ah,0x61(%ebx)
  11:	72 61                	jb     74 <tmp+0xf>
  13:	63 74 65 72          	arpl   %si,0x72(%ebp,%eiz,2)
  17:	65 73 2e             	gs jae 48 <msg_overflow+0x20>
	...

0000001b <msg_nums>:
  1b:	20 61 6c             	and    %ah,0x6c(%ecx)
  1e:	67 61                	addr16 popa 
  20:	72 69                	jb     8b <_PrintLidos.l1+0x5>
  22:	73 6d                	jae    91 <N>
  24:	6f                   	outsl  %ds:(%esi),(%dx)
  25:	73 2e                	jae    55 <ONE+0x7>
	...

00000028 <msg_overflow>:
  28:	4f                   	dec    %edi
  29:	76 65                	jbe    90 <AUX+0x3>
  2b:	72 66                	jb     93 <N+0x2>
  2d:	6c                   	insb   (%dx),%es:(%edi)
  2e:	6f                   	outsl  %ds:(%esi),(%dx)
  2f:	77 21                	ja     52 <ONE+0x4>
  31:	20 46 69             	and    %al,0x69(%esi)
  34:	6e                   	outsb  %ds:(%esi),(%dx)
  35:	61                   	popa   
  36:	6c                   	insb   (%dx),%es:(%edi)
  37:	69 7a 61 6e 64 6f 20 	imul   $0x206f646e,0x61(%edx),%edi
  3e:	6f                   	outsl  %ds:(%esi),(%dx)
  3f:	20 70 72             	and    %dh,0x72(%eax)
  42:	6f                   	outsl  %ds:(%esi),(%dx)
  43:	67 72 61             	addr16 jb a7 <N+0x16>
  46:	6d                   	insl   (%dx),%es:(%edi)
  47:	61                   	popa   
  48:	2e 2e 2e 00        	cs cs add %al,%cs:(%eax)

0000004c <buffer_len>:
	...

0000004e <ONE>:
  4e:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .bss:

00000000 <buffer>:
	...

00000064 <r_char>:
	...

00000065 <tmp>:
	...

0000008d <AUX>:
  8d:	00 00                	add    %al,(%eax)
	...

00000091 <N>:
  91:	00 00                	add    %al,(%eax)
	...

Disassembly of section .text:

00000000 <_Overflow>:
   0:	b8 28 00 00 00       	mov    $0x28,%eax
   5:	bb 24 00 00 00       	mov    $0x24,%ebx
   a:	e8 11 00 00 00       	call   20 <_Print>
   f:	e8 2e 00 00 00       	call   42 <_PrintNwln>
  14:	b8 01 00 00 00       	mov    $0x1,%eax
  19:	bb 00 00 00 00       	mov    $0x0,%ebx
  1e:	cd 80                	int    $0x80

00000020 <_Print>:
  20:	89 c1                	mov    %eax,%ecx
  22:	89 da                	mov    %ebx,%edx
  24:	b8 04 00 00 00       	mov    $0x4,%eax
  29:	bb 01 00 00 00       	mov    $0x1,%ebx
  2e:	cd 80                	int    $0x80
  30:	c3                   	ret    

00000031 <_Scan>:
  31:	89 c1                	mov    %eax,%ecx
  33:	89 da                	mov    %ebx,%edx
  35:	b8 03 00 00 00       	mov    $0x3,%eax
  3a:	bb 00 00 00 00       	mov    $0x0,%ebx
  3f:	cd 80                	int    $0x80
  41:	c3                   	ret    

00000042 <_PrintNwln>:
  42:	b8 04 00 00 00       	mov    $0x4,%eax
  47:	bb 01 00 00 00       	mov    $0x1,%ebx
  4c:	b9 00 00 00 00       	mov    $0x0,%ecx
  51:	ba 02 00 00 00       	mov    $0x2,%edx
  56:	cd 80                	int    $0x80
  58:	c3                   	ret    

00000059 <_PrintLidos>:
  59:	55                   	push   %ebp
  5a:	89 e5                	mov    %esp,%ebp
  5c:	b8 02 00 00 00       	mov    $0x2,%eax
  61:	bb 0c 00 00 00       	mov    $0xc,%ebx
  66:	e8 b5 ff ff ff       	call   20 <_Print>
  6b:	8b 45 0c             	mov    0xc(%ebp),%eax
  6e:	81 ec c8 00 00 00    	sub    $0xc8,%esp
  74:	50                   	push   %eax
  75:	e8 5b 00 00 00       	call   d5 <_IntToString>
  7a:	89 c4                	mov    %eax,%esp
  7c:	d1 e4                	shl    %esp
  7e:	f7 dc                	neg    %esp
  80:	01 ec                	add    %ebp,%esp
  82:	89 c1                	mov    %eax,%ecx
  84:	89 e0                	mov    %esp,%eax

00000086 <_PrintLidos.l1>:
  86:	50                   	push   %eax
  87:	51                   	push   %ecx
  88:	89 c1                	mov    %eax,%ecx
  8a:	ba 01 00 00 00       	mov    $0x1,%edx
  8f:	b8 04 00 00 00       	mov    $0x4,%eax
  94:	bb 01 00 00 00       	mov    $0x1,%ebx
  99:	cd 80                	int    $0x80
  9b:	59                   	pop    %ecx
  9c:	58                   	pop    %eax
  9d:	83 c0 02             	add    $0x2,%eax
  a0:	e2 e4                	loop   86 <_PrintLidos.l1>
  a2:	8b 45 08             	mov    0x8(%ebp),%eax
  a5:	83 f8 01             	cmp    $0x1,%eax
  a8:	74 11                	je     bb <_PrintLidos.nums>

000000aa <_PrintLidos.chars>:
  aa:	b8 0e 00 00 00       	mov    $0xe,%eax
  af:	bb 0d 00 00 00       	mov    $0xd,%ebx
  b4:	e8 67 ff ff ff       	call   20 <_Print>
  b9:	eb 0f                	jmp    ca <_PrintLidos.end>

000000bb <_PrintLidos.nums>:
  bb:	b8 1b 00 00 00       	mov    $0x1b,%eax
  c0:	bb 0d 00 00 00       	mov    $0xd,%ebx
  c5:	e8 56 ff ff ff       	call   20 <_Print>

000000ca <_PrintLidos.end>:
  ca:	e8 73 ff ff ff       	call   42 <_PrintNwln>
  cf:	89 ec                	mov    %ebp,%esp
  d1:	5d                   	pop    %ebp
  d2:	c2 08 00             	ret    $0x8

000000d5 <_IntToString>:
  d5:	53                   	push   %ebx
  d6:	51                   	push   %ecx
  d7:	52                   	push   %edx
  d8:	55                   	push   %ebp
  d9:	89 e5                	mov    %esp,%ebp
  db:	31 c9                	xor    %ecx,%ecx
  dd:	8b 45 14             	mov    0x14(%ebp),%eax
  e0:	50                   	push   %eax
  e1:	89 eb                	mov    %ebp,%ebx
  e3:	81 c3 e0 00 00 00    	add    $0xe0,%ebx
  e9:	53                   	push   %ebx
  ea:	83 f8 00             	cmp    $0x0,%eax
  ed:	7c 26                	jl     115 <_IntToString.negative>

000000ef <_IntToString.l1>:
  ef:	31 d2                	xor    %edx,%edx
  f1:	bb 0a 00 00 00       	mov    $0xa,%ebx
  f6:	f7 f3                	div    %ebx

000000f8 <_IntToString.digit>:
  f8:	83 c2 30             	add    $0x30,%edx
  fb:	41                   	inc    %ecx
  fc:	89 cf                	mov    %ecx,%edi
  fe:	f7 df                	neg    %edi
 100:	d1 e7                	shl    %edi
 102:	8b 5d f8             	mov    -0x8(%ebp),%ebx
 105:	66 89 14 3b          	mov    %dx,(%ebx,%edi,1)
 109:	83 f9 64             	cmp    $0x64,%ecx
 10c:	7f 0b                	jg     119 <_IntToString.negative2>

0000010e <_IntToString.quo>:
 10e:	83 f8 00             	cmp    $0x0,%eax
 111:	75 dc                	jne    ef <_IntToString.l1>
 113:	eb 04                	jmp    119 <_IntToString.negative2>

00000115 <_IntToString.negative>:
 115:	f7 d8                	neg    %eax
 117:	eb d6                	jmp    ef <_IntToString.l1>

00000119 <_IntToString.negative2>:
 119:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 11d:	7d 10                	jge    12f <_IntToString.end>
 11f:	41                   	inc    %ecx
 120:	89 cf                	mov    %ecx,%edi
 122:	f7 df                	neg    %edi
 124:	d1 e7                	shl    %edi
 126:	8b 5d f8             	mov    -0x8(%ebp),%ebx
 129:	66 c7 04 3b 2d 00    	movw   $0x2d,(%ebx,%edi,1)

0000012f <_IntToString.end>:
 12f:	89 c8                	mov    %ecx,%eax
 131:	89 ec                	mov    %ebp,%esp
 133:	5d                   	pop    %ebp
 134:	5a                   	pop    %edx
 135:	59                   	pop    %ecx
 136:	5b                   	pop    %ebx
 137:	c2 04 00             	ret    $0x4

0000013a <_StringToInt>:
 13a:	60                   	pusha  
 13b:	89 e5                	mov    %esp,%ebp
 13d:	31 c9                	xor    %ecx,%ecx
 13f:	31 db                	xor    %ebx,%ebx

00000141 <_StringToInt.l1>:
 141:	3b 4d 24             	cmp    0x24(%ebp),%ecx
 144:	74 2a                	je     170 <_StringToInt.end>
 146:	8b 45 28             	mov    0x28(%ebp),%eax
 149:	0f b6 04 08          	movzbl (%eax,%ecx,1),%eax
 14d:	83 e8 30             	sub    $0x30,%eax
 150:	41                   	inc    %ecx
 151:	83 f8 00             	cmp    $0x0,%eax
 154:	7e eb                	jle    141 <_StringToInt.l1>
 156:	83 f8 09             	cmp    $0x9,%eax
 159:	7f e6                	jg     141 <_StringToInt.l1>
 15b:	51                   	push   %ecx

0000015c <_StringToInt.l2>:
 15c:	3b 4d 24             	cmp    0x24(%ebp),%ecx
 15f:	74 0a                	je     16b <_StringToInt.store>
 161:	ba 0a 00 00 00       	mov    $0xa,%edx
 166:	f7 e2                	mul    %edx
 168:	41                   	inc    %ecx
 169:	eb f1                	jmp    15c <_StringToInt.l2>

0000016b <_StringToInt.store>:
 16b:	01 c3                	add    %eax,%ebx
 16d:	59                   	pop    %ecx
 16e:	eb d1                	jmp    141 <_StringToInt.l1>

00000170 <_StringToInt.end>:
 170:	8b 45 28             	mov    0x28(%ebp),%eax
 173:	80 38 2d             	cmpb   $0x2d,(%eax)
 176:	75 02                	jne    17a <_StringToInt.end2>
 178:	f7 db                	neg    %ebx

0000017a <_StringToInt.end2>:
 17a:	89 5d 2c             	mov    %ebx,0x2c(%ebp)
 17d:	89 ec                	mov    %ebp,%esp
 17f:	61                   	popa   
 180:	c2 08 00             	ret    $0x8

00000183 <LerString>:
 183:	53                   	push   %ebx
 184:	51                   	push   %ecx
 185:	52                   	push   %edx
 186:	55                   	push   %ebp
 187:	89 e5                	mov    %esp,%ebp
 189:	8b 45 18             	mov    0x18(%ebp),%eax
 18c:	31 db                	xor    %ebx,%ebx
 18e:	8b 4d 14             	mov    0x14(%ebp),%ecx
 191:	83 f9 00             	cmp    $0x0,%ecx
 194:	7e 05                	jle    19b <LerString.setmax>
 196:	83 f9 64             	cmp    $0x64,%ecx
 199:	7e 05                	jle    1a0 <LerString.l1>

0000019b <LerString.setmax>:
 19b:	b9 64 00 00 00       	mov    $0x64,%ecx

000001a0 <LerString.l1>:
 1a0:	50                   	push   %eax
 1a1:	53                   	push   %ebx
 1a2:	51                   	push   %ecx
 1a3:	b8 64 00 00 00       	mov    $0x64,%eax
 1a8:	bb 01 00 00 00       	mov    $0x1,%ebx
 1ad:	e8 7f fe ff ff       	call   31 <_Scan>
 1b2:	59                   	pop    %ecx
 1b3:	5b                   	pop    %ebx
 1b4:	58                   	pop    %eax
 1b5:	80 3d 64 00 00 00 0a 	cmpb   $0xa,0x64
 1bc:	74 1e                	je     1dc <LerString.cond>
 1be:	80 3d 64 00 00 00 20 	cmpb   $0x20,0x64
 1c5:	72 d9                	jb     1a0 <LerString.l1>
 1c7:	80 3d 64 00 00 00 7e 	cmpb   $0x7e,0x64
 1ce:	77 d0                	ja     1a0 <LerString.l1>
 1d0:	8a 15 64 00 00 00    	mov    0x64,%dl
 1d6:	88 14 18             	mov    %dl,(%eax,%ebx,1)
 1d9:	43                   	inc    %ebx
 1da:	e2 c4                	loop   1a0 <LerString.l1>

000001dc <LerString.cond>:
 1dc:	83 fb 00             	cmp    $0x0,%ebx
 1df:	74 bf                	je     1a0 <LerString.l1>

000001e1 <LerString.end>:
 1e1:	53                   	push   %ebx
 1e2:	53                   	push   %ebx
 1e3:	6a 00                	push   $0x0
 1e5:	e8 6f fe ff ff       	call   59 <_PrintLidos>
 1ea:	5b                   	pop    %ebx
 1eb:	89 d8                	mov    %ebx,%eax
 1ed:	89 ec                	mov    %ebp,%esp
 1ef:	5d                   	pop    %ebp
 1f0:	5a                   	pop    %edx
 1f1:	59                   	pop    %ecx
 1f2:	5b                   	pop    %ebx
 1f3:	c2 08 00             	ret    $0x8

000001f6 <EscreverString>:
 1f6:	60                   	pusha  
 1f7:	8b 44 24 28          	mov    0x28(%esp),%eax
 1fb:	8b 5c 24 24          	mov    0x24(%esp),%ebx
 1ff:	e8 1c fe ff ff       	call   20 <_Print>
 204:	e8 39 fe ff ff       	call   42 <_PrintNwln>
 209:	61                   	popa   
 20a:	c2 08 00             	ret    $0x8

0000020d <LerChar>:
 20d:	60                   	pusha  
 20e:	89 e5                	mov    %esp,%ebp
 210:	8b 45 24             	mov    0x24(%ebp),%eax
 213:	31 c9                	xor    %ecx,%ecx

00000215 <LerChar.l1>:
 215:	50                   	push   %eax
 216:	51                   	push   %ecx
 217:	b8 64 00 00 00       	mov    $0x64,%eax
 21c:	bb 01 00 00 00       	mov    $0x1,%ebx
 221:	e8 0b fe ff ff       	call   31 <_Scan>
 226:	59                   	pop    %ecx
 227:	58                   	pop    %eax
 228:	80 3d 64 00 00 00 0a 	cmpb   $0xa,0x64
 22f:	74 1b                	je     24c <LerChar.cond>
 231:	80 3d 64 00 00 00 20 	cmpb   $0x20,0x64
 238:	72 db                	jb     215 <LerChar.l1>
 23a:	80 3d 64 00 00 00 7d 	cmpb   $0x7d,0x64
 241:	77 d2                	ja     215 <LerChar.l1>
 243:	8a 1d 64 00 00 00    	mov    0x64,%bl
 249:	88 18                	mov    %bl,(%eax)
 24b:	41                   	inc    %ecx

0000024c <LerChar.cond>:
 24c:	83 f9 00             	cmp    $0x0,%ecx
 24f:	74 c4                	je     215 <LerChar.l1>

00000251 <LerChar.end>:
 251:	6a 01                	push   $0x1
 253:	6a 00                	push   $0x0
 255:	e8 ff fd ff ff       	call   59 <_PrintLidos>
 25a:	89 ec                	mov    %ebp,%esp
 25c:	61                   	popa   
 25d:	b8 01 00 00 00       	mov    $0x1,%eax
 262:	c2 04 00             	ret    $0x4

00000265 <EscreverChar>:
 265:	60                   	pusha  
 266:	89 e5                	mov    %esp,%ebp
 268:	8b 45 24             	mov    0x24(%ebp),%eax
 26b:	bb 01 00 00 00       	mov    $0x1,%ebx
 270:	e8 ab fd ff ff       	call   20 <_Print>
 275:	e8 c8 fd ff ff       	call   42 <_PrintNwln>
 27a:	89 ec                	mov    %ebp,%esp
 27c:	61                   	popa   
 27d:	c2 04 00             	ret    $0x4

00000280 <LerInteiro>:
 280:	53                   	push   %ebx
 281:	51                   	push   %ecx
 282:	52                   	push   %edx
 283:	55                   	push   %ebp
 284:	89 e5                	mov    %esp,%ebp
 286:	31 c9                	xor    %ecx,%ecx
 288:	8b 5d 14             	mov    0x14(%ebp),%ebx

0000028b <LerInteiro.l1>:
 28b:	53                   	push   %ebx
 28c:	51                   	push   %ecx
 28d:	b8 64 00 00 00       	mov    $0x64,%eax
 292:	bb 01 00 00 00       	mov    $0x1,%ebx
 297:	e8 95 fd ff ff       	call   31 <_Scan>
 29c:	59                   	pop    %ecx
 29d:	5b                   	pop    %ebx
 29e:	80 3d 64 00 00 00 0a 	cmpb   $0xa,0x64
 2a5:	74 29                	je     2d0 <LerInteiro.cond>
 2a7:	80 3d 64 00 00 00 2d 	cmpb   $0x2d,0x64
 2ae:	74 12                	je     2c2 <LerInteiro.write>
 2b0:	80 3d 64 00 00 00 30 	cmpb   $0x30,0x64
 2b7:	72 d2                	jb     28b <LerInteiro.l1>
 2b9:	80 3d 64 00 00 00 39 	cmpb   $0x39,0x64
 2c0:	77 c9                	ja     28b <LerInteiro.l1>

000002c2 <LerInteiro.write>:
 2c2:	a0 64 00 00 00       	mov    0x64,%al
 2c7:	88 04 0b             	mov    %al,(%ebx,%ecx,1)
 2ca:	41                   	inc    %ecx
 2cb:	83 f9 64             	cmp    $0x64,%ecx
 2ce:	7c bb                	jl     28b <LerInteiro.l1>

000002d0 <LerInteiro.cond>:
 2d0:	83 f9 00             	cmp    $0x0,%ecx
 2d3:	74 b6                	je     28b <LerInteiro.l1>

000002d5 <LerInteiro.end>:
 2d5:	53                   	push   %ebx
 2d6:	51                   	push   %ecx
 2d7:	51                   	push   %ecx
 2d8:	6a 00                	push   $0x0
 2da:	e8 7a fd ff ff       	call   59 <_PrintLidos>
 2df:	59                   	pop    %ecx
 2e0:	5b                   	pop    %ebx
 2e1:	83 ec 04             	sub    $0x4,%esp
 2e4:	53                   	push   %ebx
 2e5:	51                   	push   %ecx
 2e6:	e8 4f fe ff ff       	call   13a <_StringToInt>
 2eb:	58                   	pop    %eax
 2ec:	89 03                	mov    %eax,(%ebx)
 2ee:	89 c8                	mov    %ecx,%eax
 2f0:	89 ec                	mov    %ebp,%esp
 2f2:	5d                   	pop    %ebp
 2f3:	5a                   	pop    %edx
 2f4:	59                   	pop    %ecx
 2f5:	5b                   	pop    %ebx
 2f6:	c2 04 00             	ret    $0x4

000002f9 <EscreverInteiro>:
 2f9:	60                   	pusha  
 2fa:	89 e5                	mov    %esp,%ebp
 2fc:	8b 45 24             	mov    0x24(%ebp),%eax
 2ff:	8b 00                	mov    (%eax),%eax
 301:	81 ec c8 00 00 00    	sub    $0xc8,%esp
 307:	50                   	push   %eax
 308:	e8 c8 fd ff ff       	call   d5 <_IntToString>
 30d:	89 c4                	mov    %eax,%esp
 30f:	d1 e4                	shl    %esp
 311:	f7 dc                	neg    %esp
 313:	01 ec                	add    %ebp,%esp
 315:	89 c1                	mov    %eax,%ecx
 317:	89 e0                	mov    %esp,%eax

00000319 <EscreverInteiro.l1>:
 319:	50                   	push   %eax
 31a:	51                   	push   %ecx
 31b:	bb 01 00 00 00       	mov    $0x1,%ebx
 320:	e8 fb fc ff ff       	call   20 <_Print>
 325:	59                   	pop    %ecx
 326:	58                   	pop    %eax
 327:	83 c0 02             	add    $0x2,%eax
 32a:	e2 ed                	loop   319 <EscreverInteiro.l1>
 32c:	e8 11 fd ff ff       	call   42 <_PrintNwln>
 331:	89 ec                	mov    %ebp,%esp
 333:	61                   	popa   
 334:	c2 04 00             	ret    $0x4

00000337 <test>:
 337:	b8 03 00 00 00       	mov    $0x3,%eax
 33c:	bb 06 00 00 00       	mov    $0x6,%ebx
 341:	b9 09 00 00 00       	mov    $0x9,%ecx
 346:	ba 0c 00 00 00       	mov    $0xc,%edx
 34b:	bd 0f 00 00 00       	mov    $0xf,%ebp
 350:	68 00 00 00 00       	push   $0x0
 355:	e8 b3 fe ff ff       	call   20d <LerChar>
 35a:	a3 65 00 00 00       	mov    %eax,0x65
 35f:	68 65 00 00 00       	push   $0x65
 364:	e8 90 ff ff ff       	call   2f9 <EscreverInteiro>
 369:	68 00 00 00 00       	push   $0x0
 36e:	e8 f2 fe ff ff       	call   265 <EscreverChar>
 373:	68 00 00 00 00       	push   $0x0
 378:	e8 03 ff ff ff       	call   280 <LerInteiro>
 37d:	a3 65 00 00 00       	mov    %eax,0x65
 382:	68 65 00 00 00       	push   $0x65
 387:	e8 6d ff ff ff       	call   2f9 <EscreverInteiro>
 38c:	68 00 00 00 00       	push   $0x0
 391:	e8 63 ff ff ff       	call   2f9 <EscreverInteiro>
 396:	68 00 00 00 00       	push   $0x0
 39b:	6a 14                	push   $0x14
 39d:	e8 e1 fd ff ff       	call   183 <LerString>
 3a2:	a3 65 00 00 00       	mov    %eax,0x65
 3a7:	68 65 00 00 00       	push   $0x65
 3ac:	e8 48 ff ff ff       	call   2f9 <EscreverInteiro>
 3b1:	68 00 00 00 00       	push   $0x0
 3b6:	50                   	push   %eax
 3b7:	e8 3a fe ff ff       	call   1f6 <EscreverString>
 3bc:	31 ff                	xor    %edi,%edi
 3be:	b8 01 00 00 00       	mov    $0x1,%eax
 3c3:	bb 00 00 00 00       	mov    $0x0,%ebx
 3c8:	cd 80                	int    $0x80

000003ca <_start>:
 3ca:	68 91 00 00 00       	push   $0x91
 3cf:	e8 ac fe ff ff       	call   280 <LerInteiro>
 3d4:	a1 91 00 00 00       	mov    0x91,%eax

000003d9 <FAT>:
 3d9:	2b 05 4e 00 00 00    	sub    0x4e,%eax
 3df:	83 f8 00             	cmp    $0x0,%eax
 3e2:	74 23                	je     407 <FIM>
 3e4:	a3 8d 00 00 00       	mov    %eax,0x8d
 3e9:	99                   	cltd   
 3ea:	8b 1d 91 00 00 00    	mov    0x91,%ebx
 3f0:	f7 eb                	imul   %ebx
 3f2:	83 fa 00             	cmp    $0x0,%edx
 3f5:	0f 85 05 fc ff ff    	jne    0 <_Overflow>
 3fb:	a3 91 00 00 00       	mov    %eax,0x91
 400:	a1 8d 00 00 00       	mov    0x8d,%eax
 405:	eb d2                	jmp    3d9 <FAT>

00000407 <FIM>:
 407:	68 91 00 00 00       	push   $0x91
 40c:	e8 e8 fe ff ff       	call   2f9 <EscreverInteiro>
 411:	b8 01 00 00 00       	mov    $0x1,%eax
 416:	bb 00 00 00 00       	mov    $0x0,%ebx
 41b:	cd 80                	int    $0x80

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
	...
  14:	1d 04 00 00 00       	sbb    $0x4,%eax
  19:	00 00                	add    %al,(%eax)
  1b:	00 00                	add    %al,(%eax)
  1d:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
   0:	0e                   	push   %cs
   1:	00 00                	add    %al,(%eax)
   3:	00 03                	add    %al,(%ebx)
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	6d                   	insl   (%dx),%es:(%edi)
   1:	00 00                	add    %al,(%eax)
   3:	00 02                	add    %al,(%edx)
   5:	00 00                	add    %al,(%eax)
   7:	00 00                	add    %al,(%eax)
   9:	00 04 01             	add    %al,(%ecx,%eax,1)
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	1d 04 00 00 00       	sbb    $0x4,%eax
  15:	00 00                	add    %al,(%eax)
  17:	00 2f                	add    %ch,(%edi)
  19:	6d                   	insl   (%dx),%es:(%edi)
  1a:	6e                   	outsb  %ds:(%esi),(%dx)
  1b:	74 2f                	je     4c <.debug_info+0x4c>
  1d:	64 2f                	fs das 
  1f:	52                   	push   %edx
  20:	65 70 6f             	gs jo  92 <N+0x1>
  23:	73 69                	jae    8e <AUX+0x1>
  25:	74 6f                	je     96 <N+0x5>
  27:	72 69                	jb     92 <N+0x1>
  29:	6f                   	outsl  %ds:(%esi),(%dx)
  2a:	73 2f                	jae    5b <.debug_info+0x5b>
  2c:	53                   	push   %ebx
  2d:	42                   	inc    %edx
  2e:	2d 54 72 61 64       	sub    $0x64617254,%eax
  33:	75 74                	jne    a9 <N+0x18>
  35:	6f                   	outsl  %ds:(%esi),(%dx)
  36:	72 2f                	jb     67 <.debug_info+0x67>
  38:	61                   	popa   
  39:	73 73                	jae    ae <_PrintLidos.chars+0x4>
  3b:	65 74 73             	gs je  b1 <_PrintLidos.chars+0x7>
  3e:	2f                   	das    
  3f:	61                   	popa   
  40:	73 73                	jae    b5 <_PrintLidos.chars+0xb>
  42:	65 6d                	gs insl (%dx),%es:(%edi)
  44:	62 6c 79 2f          	bound  %ebp,0x2f(%ecx,%edi,2)
  48:	6f                   	outsl  %ds:(%esi),(%dx)
  49:	75 72                	jne    bd <_PrintLidos.nums+0x2>
  4b:	73 2f                	jae    7c <tmp+0x17>
  4d:	66 61                	popaw  
  4f:	74 6f                	je     c0 <_PrintLidos.nums+0x5>
  51:	72 69                	jb     bc <_PrintLidos.nums+0x1>
  53:	61                   	popa   
  54:	6c                   	insb   (%dx),%es:(%edi)
  55:	2e 73 00             	jae,pn 58 <.debug_info+0x58>
  58:	4e                   	dec    %esi
  59:	41                   	inc    %ecx
  5a:	53                   	push   %ebx
  5b:	4d                   	dec    %ebp
  5c:	20 32                	and    %dh,(%edx)
  5e:	2e 31 34 2e          	xor    %esi,%cs:(%esi,%ebp,1)
  62:	30 32                	xor    %dh,(%edx)
  64:	00 01                	add    %al,(%ecx)
  66:	80 02 00             	addb   $0x0,(%edx)
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	01 11                	add    %edx,(%ecx)
   4:	01 12                	add    %edx,(%edx)
   6:	01 10                	add    %edx,(%eax)
   8:	06                   	push   %es
   9:	03 08                	add    (%eax),%ecx
   b:	25 08 13 05 00       	and    $0x51308,%eax
  10:	00 02                	add    %al,(%edx)
  12:	2e 00 11             	add    %dl,%cs:(%ecx)
  15:	01 40 06             	add    %eax,0x6(%eax)
  18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	f6 01 00             	testb  $0x0,(%ecx)
   3:	00 03                	add    %al,(%ebx)
   5:	00 78 00             	add    %bh,0x0(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	01 01                	add    %eax,(%ecx)
   c:	fb                   	sti    
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	00 61 73             	add    %ah,0x73(%ecx)
  1e:	73 65                	jae    85 <.debug_line+0x85>
  20:	74 73                	je     95 <.debug_line+0x95>
  22:	2f                   	das    
  23:	61                   	popa   
  24:	73 73                	jae    99 <.debug_line+0x99>
  26:	65 6d                	gs insl (%dx),%es:(%edi)
  28:	62 6c 79 2f          	bound  %ebp,0x2f(%ecx,%edi,2)
  2c:	69 61 33 32 2f 69 6e 	imul   $0x6e692f32,0x33(%ecx),%esp
  33:	6f                   	outsl  %ds:(%esi),(%dx)
  34:	75 74                	jne    aa <.debug_line+0xaa>
  36:	2e 61                	cs popa 
  38:	73 6d                	jae    a7 <.debug_line+0xa7>
  3a:	00 00                	add    %al,(%eax)
  3c:	00 00                	add    %al,(%eax)
  3e:	2f                   	das    
  3f:	6d                   	insl   (%dx),%es:(%edi)
  40:	6e                   	outsb  %ds:(%esi),(%dx)
  41:	74 2f                	je     72 <.debug_line+0x72>
  43:	64 2f                	fs das 
  45:	52                   	push   %edx
  46:	65 70 6f             	gs jo  b8 <.debug_line+0xb8>
  49:	73 69                	jae    b4 <.debug_line+0xb4>
  4b:	74 6f                	je     bc <.debug_line+0xbc>
  4d:	72 69                	jb     b8 <.debug_line+0xb8>
  4f:	6f                   	outsl  %ds:(%esi),(%dx)
  50:	73 2f                	jae    81 <.debug_line+0x81>
  52:	53                   	push   %ebx
  53:	42                   	inc    %edx
  54:	2d 54 72 61 64       	sub    $0x64617254,%eax
  59:	75 74                	jne    cf <.debug_line+0xcf>
  5b:	6f                   	outsl  %ds:(%esi),(%dx)
  5c:	72 2f                	jb     8d <.debug_line+0x8d>
  5e:	61                   	popa   
  5f:	73 73                	jae    d4 <.debug_line+0xd4>
  61:	65 74 73             	gs je  d7 <.debug_line+0xd7>
  64:	2f                   	das    
  65:	61                   	popa   
  66:	73 73                	jae    db <.debug_line+0xdb>
  68:	65 6d                	gs insl (%dx),%es:(%edi)
  6a:	62 6c 79 2f          	bound  %ebp,0x2f(%ecx,%edi,2)
  6e:	6f                   	outsl  %ds:(%esi),(%dx)
  6f:	75 72                	jne    e3 <.debug_line+0xe3>
  71:	73 2f                	jae    a2 <.debug_line+0xa2>
  73:	66 61                	popaw  
  75:	74 6f                	je     e6 <.debug_line+0xe6>
  77:	72 69                	jb     e2 <.debug_line+0xe2>
  79:	61                   	popa   
  7a:	6c                   	insb   (%dx),%es:(%edi)
  7b:	2e 73 00             	jae,pn 7e <.debug_line+0x7e>
  7e:	00 00                	add    %al,(%eax)
  80:	00 00                	add    %al,(%eax)
  82:	00 05 02 00 00 00    	add    %al,0x2
  88:	00 03                	add    %al,(%ebx)
  8a:	2d 01 59 59 59       	sub    $0x59595901,%eax
  8f:	59                   	pop    %ecx
  90:	c0 2f 2f             	shrb   $0x2f,(%edi)
  93:	59                   	pop    %ecx
  94:	59                   	pop    %ecx
  95:	2f                   	das    
  96:	26 2f                	es das 
  98:	2f                   	das    
  99:	59                   	pop    %ecx
  9a:	59                   	pop    %ecx
  9b:	2f                   	das    
  9c:	24 59                	and    $0x59,%al
  9e:	59                   	pop    %ecx
  9f:	59                   	pop    %ecx
  a0:	59                   	pop    %ecx
  a1:	2f                   	das    
  a2:	25 21 30 59 59       	and    $0x59593021,%eax
  a7:	5a                   	pop    %edx
  a8:	3d 67 21 59 2f       	cmp    $0x2f592167,%eax
  ad:	2f                   	das    
  ae:	2f                   	das    
  af:	30 2f                	xor    %ch,(%edi)
  b1:	30 21                	xor    %ah,(%ecx)
  b3:	22 2f                	and    (%edi),%ch
  b5:	59                   	pop    %ecx
  b6:	59                   	pop    %ecx
  b7:	59                   	pop    %ecx
  b8:	30 21                	xor    %ah,(%ecx)
  ba:	21 3d 30 3d 3d 30    	and    %edi,0x303d3d30
  c0:	59                   	pop    %ecx
  c1:	59                   	pop    %ecx
  c2:	59                   	pop    %ecx
  c3:	30 59 59             	xor    %bl,0x59(%ecx)
  c6:	5a                   	pop    %edx
  c7:	5a                   	pop    %edx
  c8:	2f                   	das    
  c9:	21 41 21             	and    %eax,0x21(%ecx)
  cc:	21 21                	and    %esp,(%ecx)
  ce:	21 30                	and    %esi,(%eax)
  d0:	30 3d 21 2f 67 22    	xor    %bh,0x22672f21
  d6:	3d 30 2f 59 30       	cmp    $0x30592f30,%eax
  db:	3e 22 2f             	and    %ds:(%edi),%ch
  de:	2f                   	das    
  df:	2f                   	das    
  e0:	3d 4c 3d 30 3d       	cmp    $0x3d303d4c,%eax
  e5:	2f                   	das    
  e6:	30 2f                	xor    %ch,(%edi)
  e8:	30 4b 30             	xor    %cl,0x30(%ebx)
  eb:	22 2f                	and    (%edi),%ch
  ed:	2f                   	das    
  ee:	2f                   	das    
  ef:	3d 68 30 2f 21       	cmp    $0x212f3068,%eax
  f4:	21 21                	and    %esp,(%ecx)
  f6:	21 41 21             	and    %eax,0x21(%ecx)
  f9:	30 2f                	xor    %ch,(%edi)
  fb:	30 3d 30 3d 4b 3e    	xor    %bh,0x3e4b3d30
 101:	22 3d 2f 3d 30 22    	and    0x22303d2f,%bh
 107:	3d 30 59 2f 21       	cmp    $0x212f5930,%eax
 10c:	30 2f                	xor    %ch,(%edi)
 10e:	21 30                	and    %esi,(%eax)
 110:	3d 3d 2f 30 3e       	cmp    $0x3e302f3d,%eax
 115:	2f                   	das    
 116:	21 44 21 21          	and    %eax,0x21(%ecx,%eiz,1)
 11a:	21 21                	and    %esp,(%ecx)
 11c:	30 3d 2f 3d 3d 2f    	xor    %bh,0x2f3d3d2f
 122:	3d 30 5a 21 21       	cmp    $0x21215a30,%eax
 127:	22 59 59             	and    0x59(%ecx),%bl
 12a:	5a                   	pop    %edx
 12b:	21 21                	and    %esp,(%ecx)
 12d:	22 75 2f             	and    0x2f(%ebp),%dh
 130:	75 2f                	jne    161 <.debug_line+0x161>
 132:	75 30                	jne    164 <.debug_line+0x164>
 134:	67 3d 21 30 3d 30    	addr16 cmp $0x303d3021,%eax
 13a:	22 21                	and    (%ecx),%ah
 13c:	2f                   	das    
 13d:	5a                   	pop    %edx
 13e:	21 30                	and    %esi,(%eax)
 140:	2f                   	das    
 141:	21 21                	and    %esp,(%ecx)
 143:	21 21                	and    %esp,(%ecx)
 145:	40                   	inc    %eax
 146:	21 4b 4b             	and    %ecx,0x4b(%ebx)
 149:	59                   	pop    %ecx
 14a:	59                   	pop    %ecx
 14b:	21 41 21             	and    %eax,0x21(%ecx)
 14e:	30 3d 30 21 22 59    	xor    %bh,0x59222130
 154:	59                   	pop    %ecx
 155:	5a                   	pop    %edx
 156:	21 22                	and    %esp,(%edx)
 158:	75 2f                	jne    189 <.debug_line+0x189>
 15a:	75 2f                	jne    18b <.debug_line+0x18b>
 15c:	75 30                	jne    18e <.debug_line+0x18e>
 15e:	67 2f                	addr16 das 
 160:	22 3d 30 2f 2f 5a    	and    0x5a2f2f30,%bh
 166:	2f                   	das    
 167:	21 59 40             	and    %ebx,0x40(%ecx)
 16a:	21 30                	and    %esi,(%eax)
 16c:	3d 59 59 5a 2f       	cmp    $0x2f5a5959,%eax
 171:	21 41 21             	and    %eax,0x21(%ecx)
 174:	21 21                	and    %esp,(%ecx)
 176:	21 2f                	and    %ebp,(%edi)
 178:	2f                   	das    
 179:	3e 21 22             	and    %esp,%ds:(%edx)
 17c:	59                   	pop    %ecx
 17d:	59                   	pop    %ecx
 17e:	5a                   	pop    %edx
 17f:	21 22                	and    %esp,(%edx)
 181:	75 2f                	jne    1b2 <.debug_line+0x1b2>
 183:	75 2f                	jne    1b4 <.debug_line+0x1b4>
 185:	75 2f                	jne    1b6 <.debug_line+0x1b6>
 187:	75 30                	jne    1b9 <.debug_line+0x1b9>
 189:	59                   	pop    %ecx
 18a:	3d 21 3d 30 3d       	cmp    $0x3d303d21,%eax
 18f:	30 21                	xor    %ah,(%ecx)
 191:	22 21                	and    (%ecx),%ah
 193:	2f                   	das    
 194:	5a                   	pop    %edx
 195:	21 22                	and    %esp,(%edx)
 197:	3d 21 21 59 21       	cmp    $0x21592121,%eax
 19c:	30 30                	xor    %dh,(%eax)
 19e:	2f                   	das    
 19f:	21 21                	and    %esp,(%ecx)
 1a1:	21 21                	and    %esp,(%ecx)
 1a3:	40                   	inc    %eax
 1a4:	21 2f                	and    %ebp,(%edi)
 1a6:	3d 2f 67 21 59       	cmp    $0x5921672f,%eax
 1ab:	2f                   	das    
 1ac:	2f                   	das    
 1ad:	2f                   	das    
 1ae:	30 2f                	xor    %ch,(%edi)
 1b0:	30 21                	xor    %ah,(%ecx)
 1b2:	22 59 5a             	and    0x5a(%ecx),%bl
 1b5:	21 22                	and    %esp,(%edx)
 1b7:	3d 30 5a 2f 21       	cmp    $0x212f5a30,%eax
 1bc:	40                   	inc    %eax
 1bd:	59                   	pop    %ecx
 1be:	59                   	pop    %ecx
 1bf:	59                   	pop    %ecx
 1c0:	59                   	pop    %ecx
 1c1:	5b                   	pop    %ebx
 1c2:	59                   	pop    %ecx
 1c3:	59                   	pop    %ecx
 1c4:	59                   	pop    %ecx
 1c5:	59                   	pop    %ecx
 1c6:	5a                   	pop    %edx
 1c7:	59                   	pop    %ecx
 1c8:	5b                   	pop    %ebx
 1c9:	59                   	pop    %ecx
 1ca:	59                   	pop    %ecx
 1cb:	59                   	pop    %ecx
 1cc:	59                   	pop    %ecx
 1cd:	5a                   	pop    %edx
 1ce:	59                   	pop    %ecx
 1cf:	5b                   	pop    %ebx
 1d0:	59                   	pop    %ecx
 1d1:	2f                   	das    
 1d2:	59                   	pop    %ecx
 1d3:	59                   	pop    %ecx
 1d4:	59                   	pop    %ecx
 1d5:	5a                   	pop    %edx
 1d6:	59                   	pop    %ecx
 1d7:	21 5a 2f             	and    %ebx,0x2f(%edx)
 1da:	04 02                	add    $0x2,%al
 1dc:	03 84 7c 02 0c 01 59 	add    0x59010c02(%esp,%edi,2),%eax
 1e3:	59                   	pop    %ecx
 1e4:	5a                   	pop    %edx
 1e5:	67 3d 2f 59 21 67    	addr16 cmp $0x6721592f,%eax
 1eb:	2f                   	das    
 1ec:	3d 67 59 59 30       	cmp    $0x30595967,%eax
 1f1:	59                   	pop    %ecx
 1f2:	59                   	pop    %ecx
 1f3:	59                   	pop    %ecx
 1f4:	59                   	pop    %ecx
 1f5:	02 02                	add    (%edx),%al
 1f7:	00 01                	add    %al,(%ecx)
 1f9:	01                   	.byte 0x1

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
	...
